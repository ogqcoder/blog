{
  "_args": [
    [
      {
        "raw": "w3c-xmlserializer@^2.0.0",
        "scope": null,
        "escapedName": "w3c-xmlserializer",
        "name": "w3c-xmlserializer",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\garth\\Documents\\codeprojects\\blog2\\node_modules\\jsdom"
    ]
  ],
  "_from": "w3c-xmlserializer@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "w3c-xmlserializer@2.0.0",
  "_location": "/w3c-xmlserializer",
  "_nodeVersion": "12.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/w3c-xmlserializer_2.0.0_1577994542004_0.8701537554913978"
  },
  "_npmUser": {
    "name": "domenic",
    "email": "d@domenic.me"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "w3c-xmlserializer@^2.0.0",
    "scope": null,
    "escapedName": "w3c-xmlserializer",
    "name": "w3c-xmlserializer",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jsdom"
  ],
  "_resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-2.0.0.tgz",
  "_shasum": "3e7104a05b75146cc60f564380b7f683acf1020a",
  "_shrinkwrap": null,
  "_spec": "w3c-xmlserializer@^2.0.0",
  "_where": "C:\\Users\\garth\\Documents\\codeprojects\\blog2\\node_modules\\jsdom",
  "bugs": {
    "url": "https://github.com/jsdom/w3c-xmlserializer/issues"
  },
  "dependencies": {
    "xml-name-validator": "^3.0.0"
  },
  "description": "A per-spec XML serializer implementation",
  "devDependencies": {
    "eslint": "^6.8.0",
    "jest": "^24.9.0",
    "jsdom": "^15.2.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-4tzD0mF8iSiMiNs30BiLO3EpfGLZUT2MSX/G+o7ZywDzliWQ3OPtTZ0PTC3B3ca1UAf4cJMHB+2Bf56EriJuRA==",
    "shasum": "3e7104a05b75146cc60f564380b7f683acf1020a",
    "tarball": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-2.0.0.tgz",
    "fileCount": 6,
    "unpackedSize": 18036,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeDkkuCRA9TVsSAnZWagAAJSAP/3F70V4QrzfsxhSDaPRH\nZiC/noWsILLvu+2BsB17IcyV+HYiIC7BI15uAkA471BVj9yhViRuaQyeBjGt\n5BoOz+QhFO8hN7pol5ww+f6ry8TYbs4RVKyoE995aETJGw7ncFpNUfCc5nQA\nW/7XQrpHaxa6yRoPAQqCTCE/8Ne6tthC2bYldNoOMv+uCPOP8AwPVnh8xnhK\n3twMcF5rpeY1oIzMbjS64yjTUVSQuOYLQmxU1bo+yz7sMHrUXAxd9VWRjq35\nqHVp+JeqRyOu807lAQg2OI/RlBveWuOh2bmqy1WJYblW44gSFNQ+3gmyblfT\nJTgjX+CUJGRsDB2atJIvtkxdNuwKofV6RdGMSQA5tcKFGCbLOoC61Rn9oJnK\ngi8qumWVRt8QhODiqrZR7ZM9uqqF0/df+zqFq8c5olrZZcTXGYOJN1ki6/KZ\n/zkf293T3x6zLoCx9mJFn06Q4MQPtYNNKZD9pdlcB8nYKEE6Vht57BIdsxCX\ndgeSvVrCIXueNCgBmhO7UVIKjyi03TbIxbzYKvVmbP64LulIg4TZM5pVbNIm\n8nJ2YIAGFA+GyXsB7oViBM36wl4q1BRCvB54wjyLFrGujqV6whrCy6aPZXbz\nmLX0hmUWKgh6v/r73AZlfa11SP8eZCfRLpAMpY5828hiGvj1r/BZVjosYtRt\nBGnJ\r\n=j9De\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "lib/"
  ],
  "gitHead": "26d6547e310b84e8b2ae2e03d6d7ea9128c7ccff",
  "homepage": "https://github.com/jsdom/w3c-xmlserializer#readme",
  "keywords": [
    "dom",
    "w3c",
    "xml",
    "xmlserializer"
  ],
  "license": "MIT",
  "main": "lib/serialize.js",
  "maintainers": [
    {
      "name": "domenic",
      "email": "d@domenic.me"
    },
    {
      "name": "joris-van-der-wel",
      "email": "joris@jorisvanderwel.com"
    },
    {
      "name": "sebmaster",
      "email": "sebmaster16@gmail.com"
    },
    {
      "name": "timothygu",
      "email": "timothygu99@gmail.com"
    },
    {
      "name": "tmpvar",
      "email": "tmpvar@gmail.com"
    },
    {
      "name": "zirro",
      "email": "code@zirro.se"
    }
  ],
  "name": "w3c-xmlserializer",
  "optionalDependencies": {},
  "readme": "# w3c-xmlserializer\n\nAn XML serializer that follows the [W3C specification](https://w3c.github.io/DOM-Parsing/).\n\nThis package can be used in Node.js, as long as you feed it a DOM node, e.g. one produced by [jsdom](https://github.com/jsdom/jsdom).\n\n## Basic usage\n\nAssume you have a DOM tree rooted at a node `node`. In Node.js, you could create this using [jsdom](https://github.com/jsdom/jsdom) as follows:\n\n```js\nconst { JSDOM } = require(\"jsdom\");\n\nconst { document } = new JSDOM().window;\nconst node = document.createElement(\"akomaNtoso\");\n```\n\nThen, you use this package as follows:\n\n\n```js\nconst serialize = require(\"w3c-xmlserializer\");\n\nconsole.log(serialize(node));\n// => '<akomantoso xmlns=\"http://www.w3.org/1999/xhtml\"></akomantoso>'\n```\n\n## `requireWellFormed` option\n\nBy default the input DOM tree is not required to be \"well-formed\"; any given input will serialize to some output string. You can instead require well-formedness via\n\n```js\nserialize(node, { requireWellFormed: true });\n```\n\nwhich will cause `Error`s to be thrown when non-well-formed constructs are encountered. [Per the spec](https://w3c.github.io/DOM-Parsing/#dfn-require-well-formed), this largely is about imposing constraints on the names of elements, attributes, etc.\n\nAs a point of reference, on the web platform:\n\n* The [`innerHTML` getter](https://w3c.github.io/DOM-Parsing/#dom-innerhtml-innerhtml) uses the require-well-formed mode, i.e. trying to get the `innerHTML` of non-well-formed subtrees will throw.\n* The [`xhr.send()` method](https://xhr.spec.whatwg.org/#the-send()-method) does not require well-formedness, i.e. sending non-well-formed `Document`s will serialize and send them anyway.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jsdom/w3c-xmlserializer.git"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "jest"
  },
  "version": "2.0.0"
}
